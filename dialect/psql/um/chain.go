// Code generated by "litsql-dialectgen"; DO NOT EDIT.
package um

import (
	litsql "github.com/rrgmc/litsql"
	tag "github.com/rrgmc/litsql/dialect/psql/tag"
	sq "github.com/rrgmc/litsql/sq"
)

type FromChain interface {
	sq.QueryMod[tag.UpdateTag]
	As(alias string, columns ...string) FromChain
	Only() FromChain
	Lateral() FromChain
	WithOrdinality() FromChain
}

type JoinChain interface {
	sq.QueryMod[tag.UpdateTag]
	As(alias string, columns ...string) JoinChain
	Only() JoinChain
	Lateral() JoinChain
	WithOrdinality() JoinChain
	Natural() JoinChain
	On(on string) JoinChain
	OnExpr(on litsql.Expression) JoinChain
	OnClause(query string, args ...any) JoinChain
	Using(using ...string) JoinChain
}

type WithChain interface {
	sq.QueryMod[tag.UpdateTag]
	Recursive() WithChain
	As(q litsql.Query) WithChain
	NotMaterialized() WithChain
	Materialized() WithChain
	SearchBreadth(setCol string, searchCols ...string) WithChain
	SearchDepth(setCol string, searchCols ...string) WithChain
	Cycle(set string, using string, cols ...string) WithChain
	CycleValue(value any, defaultVal any) WithChain
}
